syntax = "proto3";
package sdk.blocksdk.v1;

option go_package = "github.com/skip-mev/block-sdk/x/blocksdk/types";

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "cosmos/query/v1/query.proto";
import "sdk/blocksdk/v1/blocksdk.proto";

// Query defines the x/blocksdk querier service.
service Query {
  rpc Lane(QueryLaneRequest) returns(QueryLaneResponse){
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/block-sdk/blocksdk/v1/lane/{id}";
  }

  rpc Lanes(QueryAllLanesRequest) returns(QueryAllLanesResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/block-sdk/blocksdk/v1/lanes";
  }
}

message QueryLaneRequest {
  string id = 1;
}

message QueryLaneResponse {
  Lane lane = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllLanesRequest {}

message QueryAllLanesResponse {
  repeated Lane lanes = 1 [ (gogoproto.nullable) = false ];
}